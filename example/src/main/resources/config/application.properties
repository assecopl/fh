# Server port
server.port=8090

spring.main.allow-circular-references=true

# Aggressive session removal. Use, when sessions cause memory leaks.
#fh.session.remove_session_immediately_after_websocket_close=true

# Database configuration
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.url=jdbc:h2:file:./database/fhdemo-db
spring.datasource.user=fhdemo
spring.datasource.password=fhdemo
spring.datasource.min-pool-size=2
spring.datasource.max-pool-size=10

# Generate default users and roles when database is empty.
fhframework.security.provider.generate-default-data=true
# Default administration user login
fhframework.security.provider.default-admin-login=admin
# Default administration user password
fhframework.security.provider.default-admin-pass=admin
# Default administration role
fhframework.security.provider.default-admin-role=Administrator

# System use case classes
system.usecases.classes=pl.fhframework.app.menu.MenuUC,pl.fhframework.app.menu.NavbarUC
# Pipe of additional layout names used in FH Framework. Each layout must have an HTML template file with a corresponding name
fhframework.layout.templates=full,panels
# Turn on WebSocket Gzip Compresion for backend responses
fh.web.socket.compresion=true

# Set level details when request for given form component cannot be processed
# Available values: SHOW_NORMAL_INFO - default level (devalut value if not set), SHOW_EXTENDED_INFO - add some extra infos, HIDE_INFO - hides all infos
fh.extendedInfoWhenEventCannotBeProcessed=SHOW_NORMAL_INFO

